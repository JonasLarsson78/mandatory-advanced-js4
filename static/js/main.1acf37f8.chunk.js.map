{"version":3,"sources":["components/Connec4.js","components/Name.js","App.js","serviceWorker.js","index.js"],"names":["Connect4","props","trCount","_useState","useState","player1","Object","slicedToArray","_useState3","player2","_useState5","_useState6","player1Points","updatePlayer1Points","_useState7","_useState8","player2Points","updatePlayer2Points","_useState9","_useState10","currentPlayer","updatecurrentPlayer","_useState11","_useState12","board","updateBoard","_useState13","_useState14","gameOver","updateGameOver","_useState15","_useState16","message","updateMessage","_useState17","_useState18","color","updateColor","_useState19","_useState20","turn","updateTurn","_useState21","_useState22","playerName","updatePlayerName","_useState23","_useState24","ai","updateAi","useEffect","newBoard","name1","row","rows","col","push","press","e","target","dataset","table","toConsumableArray","addLast","lastIndexOf","name2","aiMoveCol","Math","floor","random","newArr","checkAll","aiPlayer","winMess","x","r","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","c","err","return","checkH","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref6","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref9","checkV","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref12","checkDR","checkDL","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref15","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_ref18","checkDraw","map","index","redDiv","react_default","a","createElement","data-col","toString","className","onClick","blueDiv","includes","disabled","key","Fragment","Helmet","title","onOut","style","backgroundColor","fontSize","Name","_useState2","updateName1","_useState4","updateName2","aiOn","updateAiOn","handleFocus","select","maxLength","onChange","onChange1","type","onChange2","onChangeAiOff","name","defaultChecked","onChangeAiOn","onLogin","App","isLoggedIn","updateIsLoggedIn","Connec4","components_Name","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2LAiQiBA,MA5PjB,SAAmBC,GACf,IAAIC,EAAU,EADOC,EAEHC,mBAAS,GAApBC,EAFcC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAAAK,EAGHJ,mBAAS,GAApBK,EAHcH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,MAAAE,EAIwBN,mBAAS,GAJjCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIdE,EAJcD,EAAA,GAICE,EAJDF,EAAA,GAAAG,EAKwBV,mBAAS,GALjCW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAKdE,EALcD,EAAA,GAKCE,EALDF,EAAA,GAAAG,EAMwBd,mBAAS,MANjCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAMdE,EANcD,EAAA,GAMCE,EANDF,EAAA,GAAAG,EAOQlB,mBAAS,IAPjBmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAOdE,EAPcD,EAAA,GAOPE,EAPOF,EAAA,GAAAG,EAQctB,oBAAS,GARvBuB,EAAArB,OAAAC,EAAA,EAAAD,CAAAoB,EAAA,GAQdE,EARcD,EAAA,GAQJE,EARIF,EAAA,GAAAG,EASY1B,mBAAS,IATrB2B,EAAAzB,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GASdE,EATcD,EAAA,GASLE,EATKF,EAAA,GAAAG,EAUQ9B,mBAAS,SAVjB+B,EAAA7B,OAAAC,EAAA,EAAAD,CAAA4B,EAAA,GAUdE,EAVcD,EAAA,GAUPE,EAVOF,EAAA,GAAAG,EAWMlC,mBAAS,OAXfmC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAgC,EAAA,GAWdE,EAXcD,EAAA,GAWRE,EAXQF,EAAA,GAAAG,EAYkBtC,mBAAS,IAZ3BuC,EAAArC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAYdE,EAZcD,EAAA,GAYFE,EAZEF,EAAA,GAAAG,EAaE1C,oBAAS,GAbX2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAadE,EAbcD,EAAA,GAaVE,EAbUF,EAAA,GAerBG,oBAAU,WACRC,IACAF,EAAShD,EAAM+C,KACd,IAEH,IAAMG,EAAW,WACf9B,EAAoBZ,GACpBwB,EAAc,IACdJ,GAAe,GACfQ,EAAY,SACZI,EAAW,OACXI,EAAiB5C,EAAMmD,OAEvB,IADA,IAAID,EAAW,GACNE,EAAM,EAAGA,EAAM,EAAGA,IAAM,CAE/B,IADA,IAAIC,EAAO,GACFC,EAAM,EAAGA,EAAM,EAAGA,IACzBD,EAAKE,KAAK,MAEZL,EAASK,KAAKF,GAEhB7B,EAAY0B,IA0BRM,EAAQ,SAACC,IAEF,IAAPV,GACF3B,EAAoBD,IAAkBf,EAAUI,EAAUJ,GAG5D,IAAIkD,EAAMG,EAAEC,OAAOC,QAAQL,IACrBM,EAAKvD,OAAAwD,EAAA,EAAAxD,CAAOkB,GACd2B,EAAWU,EAAMN,GACjBQ,EAAUZ,EAASa,YAAY,MACnCb,EAASY,GAAW3C,IAAkBf,EAAUI,EAAUJ,EAE1DoB,EAAYoC,GAtBC,QAATrB,IAAyB,IAAPQ,GACpBP,EAAW,QACXI,EAAiB5C,EAAMgE,SAGvBxB,EAAW,OACXI,EAAiB5C,EAAMmD,SAkBd,IAAPJ,EArCW,WACf,GAAsB,IAAlB5B,EAAoB,CACtB,IAAI8C,EAAYC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC1BR,EAAKvD,OAAAwD,EAAA,EAAAxD,CAAOkB,GAChB8C,EAAST,EAAMK,GACfH,EAAUO,EAAON,YAAY,MACjCM,EAAOP,GAAWtD,EAClBgB,EAAYoC,GACZU,GAAS/C,IA8BPgD,GAGAD,GAAS/C,IAIPiD,EAAU,SAACC,GACf,OAAU,IAANA,GACFrC,EAAY,OACZxB,EAAoBD,EAAgB,GAC5BX,EAAMmD,MAAQ,aAGtBf,EAAY,QACZpB,EAAoBD,EAAgB,GAC5Bf,EAAMgE,MAAQ,aAwFpBM,GAAW,SAAC/C,GACd,OArFW,SAACA,GACd,IAAK,IAAImD,EAAI,EAAGA,EAAI,EAAGA,IAAK,KAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAC1B,QAAAC,EAAAC,EAAkBzD,EAAM0D,UAAxBC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAmC,KAAAW,EAAAP,EAAAQ,MAAvBC,EAAuBnF,OAAAC,EAAA,EAAAD,CAAAiF,EAAA,MAC7B/D,EAAMmD,GAAGc,IACPjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,IAC7BjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,IAC7BjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,KAC3B5D,GAAe,GACfI,EAAcwC,EAAQjD,EAAMmD,GAAGc,KAC/BhD,EAAW,SACXI,EAAiB,MATD,MAAA6C,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,KAoFlBc,CAAOpE,IApEJ,SAACA,GAAS,IAAAqE,GAAA,EAAAC,GAAA,EAAAC,OAAAhB,EAAA,IACvB,QAAAiB,EAAAC,EAAkBzE,EAAM0D,UAAxBC,OAAAC,cAAAS,GAAAG,EAAAC,EAAAZ,QAAAC,MAAAO,GAAA,EAAmC,KAAAK,EAAAF,EAAAR,MAAvBb,EAAuBrE,OAAAC,EAAA,EAAAD,CAAA4F,EAAA,MAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAtB,EAAA,IACjC,QAAAuB,EAAAC,EAAkB/E,EAAM0D,UAAxBC,OAAAC,cAAAe,GAAAG,EAAAC,EAAAlB,QAAAC,MAAAa,GAAA,EAAmC,KAAAK,EAAAF,EAAAd,MAAvBC,EAAuBnF,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,MAC7BhF,EAAMmD,GAAGc,IACPjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,GAAGc,EAAI,IAC7BjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,GAAGc,EAAI,IAC7BjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,GAAGc,EAAI,KAC3B5D,GAAe,GACfI,EAAcwC,EAAQjD,EAAMmD,GAAGc,KAC/BhD,EAAW,SACXI,EAAiB,MATM,MAAA6C,GAAAU,GAAA,EAAAC,EAAAX,EAAA,YAAAS,GAAA,MAAAI,EAAAZ,QAAAY,EAAAZ,SAAA,WAAAS,EAAA,MAAAC,KADZ,MAAAX,GAAAI,GAAA,EAAAC,EAAAL,EAAA,YAAAG,GAAA,MAAAI,EAAAN,QAAAM,EAAAN,SAAA,WAAAG,EAAA,MAAAC,IAoEIU,CAAOjF,IAnDpB,SAACA,GACf,IAAK,IAAImD,EAAI,EAAGA,EAAI,EAAGA,IAAK,KAAA+B,GAAA,EAAAC,GAAA,EAAAC,OAAA7B,EAAA,IAC1B,QAAA8B,EAAAC,EAAkBtF,EAAM0D,UAAxBC,OAAAC,cAAAsB,GAAAG,EAAAC,EAAAzB,QAAAC,MAAAoB,GAAA,EAAmC,KAAAK,EAAAF,EAAArB,MAAvBC,EAAuBnF,OAAAC,EAAA,EAAAD,CAAAyG,EAAA,MAC7BvF,EAAMmD,GAAGc,IACPjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,EAAI,IACjCjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,EAAI,IACjCjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,EAAI,KAC/B5D,GAAe,GACfI,EAAcwC,EAAQjD,EAAMmD,GAAGc,KAC/BhD,EAAW,SACXI,EAAiB,MATD,MAAA6C,GAAAiB,GAAA,EAAAC,EAAAlB,EAAA,YAAAgB,GAAA,MAAAI,EAAAnB,QAAAmB,EAAAnB,SAAA,WAAAgB,EAAA,MAAAC,KAkDgBI,CAAQxF,IAlCtC,SAACA,GACf,IAAK,IAAImD,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIc,EAAI,EAAGA,EAAI,EAAGA,IACjBjE,EAAMmD,GAAGc,IACPjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,EAAI,IACjCjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,EAAI,IACjCjE,EAAMmD,GAAGc,KAAOjE,EAAMmD,EAAI,GAAGc,EAAI,KAC/B5D,GAAe,GACfI,EAAcwC,EAAQjD,EAAMmD,GAAGc,KAC/BhD,EAAW,SACXI,EAAiB,KAwBiCoE,CAAQzF,IAjBtD,SAACA,GAAS,IAAA0F,GAAA,EAAAC,GAAA,EAAAC,OAAArC,EAAA,IAC1B,QAAAsC,EAAAC,EAAkB9F,EAAM0D,UAAxBC,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAAmC,KAAAK,EAAAF,EAAA7B,MAAvBb,EAAuBrE,OAAAC,EAAA,EAAAD,CAAAiH,EAAA,MAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA3C,EAAA,IACjC,QAAA4C,EAAAC,EAAkBpG,EAAM0D,UAAxBC,OAAAC,cAAAoC,GAAAG,EAAAC,EAAAvC,QAAAC,MAAAkC,GAAA,EAAmC,KAAAK,EAAAF,EAAAnC,MAAvBC,EAAuBnF,OAAAC,EAAA,EAAAD,CAAAuH,EAAA,MACjC,GAAoB,OAAhBrG,EAAMmD,GAAGc,GACX,OAAO,MAHsB,MAAAC,GAAA+B,GAAA,EAAAC,EAAAhC,EAAA,YAAA8B,GAAA,MAAAI,EAAAjC,QAAAiC,EAAAjC,SAAA,WAAA8B,EAAA,MAAAC,KADT,MAAAhC,GAAAyB,GAAA,EAAAC,EAAA1B,EAAA,YAAAwB,GAAA,MAAAI,EAAA3B,QAAA2B,EAAA3B,SAAA,WAAAwB,EAAA,MAAAC,GAQ1BvG,EAAoBD,EAAgB,GACpCK,EAAoBD,EAAgB,GACpCa,GAAe,GACfI,EAAc,WACdQ,EAAW,SACXI,EAAiB,IAI+DiF,CAAUtG,IA8CpFqC,GAAQrC,EAAMuG,IArCF,SAAC1E,EAAK2E,GAExB,IAAIC,EAASC,EAAAC,EAAAC,cAAA,OAAKC,WAAUnI,EAAQoI,WAAYC,UAAU,aAAaC,QAAS/E,IAC5EgF,EAAUP,EAAAC,EAAAC,cAAA,OAAKC,WAAUnI,EAAQoI,WAAYC,UAAU,cAAcC,QAAS/E,IAG7EJ,EAAIqF,SAAS,QAChBT,EAASC,EAAAC,EAAAC,cAAA,OAAKC,WAAUnI,EAAQoI,WAAYC,UAAU,aAAaC,QAAS/E,EAAOkF,UAAQ,IAC3FF,EAAUP,EAAAC,EAAAC,cAAA,OAAKC,WAAUnI,EAAQoI,WAAYC,UAAU,cAAcC,QAAS/E,EAAOkF,UAAQ,KAG/F,IAAIrF,EAAOD,EAAI0E,IAAI,SAACrD,EAAGsD,GACrB,OAAU,IAANtD,EAEAwD,EAAAC,EAAAC,cAAA,MAAIG,UAAU,KAAKK,IAAKZ,EAAQ,GAC7BC,GAIQ,IAANvD,EAELwD,EAAAC,EAAAC,cAAA,MAAIG,UAAU,KAAKK,IAAKZ,EAAQ,GAC7BS,GAKLP,EAAAC,EAAAC,cAAA,MAAIG,UAAU,KAAKK,IAAKZ,EAAQ,GAC9BE,EAAAC,EAAAC,cAAA,OAAKC,WAAUnI,EAAQoI,WAAYC,UAAU,MAAMC,QAAS/E,OAKlE,OADAvD,IAEIgI,EAAAC,EAAAC,cAAA,MAAIQ,IAAKZ,EAAQ,EAAGO,UAAU,MAAMjF,KAIxC,OACE4E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACAX,EAAAC,EAAAC,cAACU,EAAA,OAAD,CAAQC,MAAM,4BACdb,EAAAC,EAAAC,cAAA,MAAIG,UAAU,UAAd,2BACAL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,YAAYC,QAASvI,EAAM+I,OAA7C,WACAd,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAAf,QACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACfL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,MAAMC,QAASrF,GAAjC,YACA+E,EAAAC,EAAAC,cAAA,UAAQG,UAAU,WAAWC,QApDb,WAClB3H,EAAoB,GACpBI,EAAoB,GACpBkC,MAiDE,UAEA+E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAAOU,MAAO,CAACC,gBAAiB1G,IAAO0F,EAAAC,EAAAC,cAAA,SAAIxF,IAC1DsF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACfL,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMa,MAAO,CAAC7G,MAAO,QAASnC,EAAMmD,MAApC,MAAH,IAAuD8E,EAAAC,EAAAC,cAAA,QAAMa,MAAO,CAACE,SAAU,SAAUvI,GAAzF,MAAiHsH,EAAAC,EAAAC,cAAA,QAAMa,MAAO,CAACE,SAAU,SAAUnI,GAAnJ,IAAyKkH,EAAAC,EAAAC,cAAA,QAAMa,MAAO,CAAC7G,MAAO,SAArB,KAAiCnC,EAAMgE,SAEhNiE,EAAAC,EAAAC,cAAA,SAAOG,UAAU,QAAQI,SAAU/G,GACjCsG,EAAAC,EAAAC,cAAA,aACGvE,KAGLqE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UAAUU,MAAO,CAAC7G,MAAOA,IAAQ8F,EAAAC,EAAAC,cAAA,SAAIpG,MC7M3CoH,MA3CjB,SAAenJ,GAAO,IAAAE,EACWC,mBAAS,WADpBiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACXiD,EADWiG,EAAA,GACJC,EADID,EAAA,GAAA7I,EAEWJ,mBAAS,WAFpBmJ,EAAAjJ,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAEXyD,EAFWsF,EAAA,GAEJC,EAFID,EAAA,GAAA7I,EAGSN,oBAAS,GAHlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGX+I,EAHW9I,EAAA,GAGL+I,EAHK/I,EAAA,GAuBZgJ,EAAc,SAACjG,GAAD,OAAOA,EAAEC,OAAOiG,UAEpC,OACA1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACAX,EAAAC,EAAAC,cAACU,EAAA,OAAD,CAAQC,MAAM,6BACdb,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WAAd,4BACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACfL,EAAAC,EAAAC,cAAA,SAAOyB,UAAU,KAAKtB,UAAU,kBAAkB/C,MAAOpC,EAAOoF,QAASmB,EAAaG,SAzBpE,SAACpG,GACjB4F,EAAY5F,EAAEC,OAAO6B,OACrBvF,EAAM8J,UAAUrG,IAuByFsG,KAAK,SAChH9B,EAAAC,EAAAC,cAAA,QAAMG,UAAU,MAAhB,IAAsBL,EAAAC,EAAAC,cAAA,eAAtB,KACAF,EAAAC,EAAAC,cAAA,SAAOyB,UAAU,KAAKtB,UAAU,kBAAkB/C,MAAOvB,EAAOuE,QAASmB,EAAaG,SAvBpE,SAACpG,GACjB8F,EAAY9F,EAAEC,OAAO6B,OACrBvF,EAAMgK,UAAUvG,IAqByFsG,KAAK,OAAOrB,SAAUc,IAAOvB,EAAAC,EAAAC,cAAA,WACxIF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACfL,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,wBACPF,EAAAC,EAAAC,cAAA,SAAO0B,SAjBe,WACpBJ,GAAW,GACXzJ,EAAMiK,gBACNV,EAAY,YAckBQ,KAAK,QAAQG,KAAK,KAAKC,gBAAgB,IAAOlC,EAAAC,EAAAC,cAAA,wBAC9EF,EAAAC,EAAAC,cAAA,SAAO0B,SAvBc,WACnBJ,GAAW,GACXzJ,EAAMoK,eACNb,EAAY,aAoBiBQ,KAAK,QAAQG,KAAK,OAAMjC,EAAAC,EAAAC,cAAA,uBAEvDF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,WAAWC,QAASvI,EAAMqK,SAA5C,WCGWC,MAxCf,WAAgB,IAAApK,EAEyBC,oBAAS,GAFlCiJ,EAAA/I,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEPqK,EAFOnB,EAAA,GAEKoB,EAFLpB,EAAA,GAAA7I,EAGeJ,mBAAS,WAHxBmJ,EAAAjJ,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAGP4C,EAHOmG,EAAA,GAGAD,EAHAC,EAAA,GAAA7I,EAIeN,mBAAS,WAJxBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIPuD,EAJOtD,EAAA,GAIA6I,EAJA7I,EAAA,GAAAG,EAKaV,oBAAS,GALtBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAKP2I,EALO1I,EAAA,GAKD2I,EALC3I,EAAA,GAmCd,OACEyJ,EAAatC,EAAAC,EAAAC,cAACsC,EAAD,CAAU1H,GAAIyG,EAAMrG,MAAOA,EAAOa,MAAOA,EAAO+E,MAPjD,WAAQyB,GAAiB,GACjBnB,EAAY,WACZE,EAAY,WACZE,GAAW,MAIiDxB,EAAAC,EAAAC,cAACuC,EAAD,CAAMT,cArBlE,WAAQR,GAAW,GACXF,EAAY,YAoB4Ea,aAzBjG,WAAQX,GAAW,GACXF,EAAY,aAwByGO,UA5BhI,SAACrG,GAAD,OAAO4F,EAAY5F,EAAEC,OAAO6B,QA4B0HyE,UA3BtJ,SAACvG,GAAD,OAAO8F,EAAY9F,EAAEC,OAAO6B,QA2BgJ8E,QAjB9K,WACQG,GAAiB,GACH,KAAVrH,GACFkG,EAAY,WAEA,KAAVrF,GACFuF,EAAY,eClBpBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1acf37f8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\nimport '../App.css';\r\n\r\n\r\nfunction Connect4 (props){\r\n    let trCount = 0\r\n    const [player1] = useState(1);\r\n    const [player2] = useState(2);\r\n    const [player1Points, updatePlayer1Points] = useState(0);\r\n    const [player2Points, updatePlayer2Points] = useState(0);\r\n    const [currentPlayer, updatecurrentPlayer] = useState(null);\r\n    const [board, updateBoard] = useState([]);\r\n    const [gameOver, updateGameOver] = useState(false);\r\n    const [message, updateMessage] = useState(\"\");\r\n    const [color, updateColor] = useState(\"white\");\r\n    const [turn, updateTurn] = useState(\"red\");\r\n    const [playerName, updatePlayerName] = useState(\"\");\r\n    const [ai, updateAi] = useState(false)\r\n  \r\n    useEffect(() =>{\r\n      newBoard();\r\n      updateAi(props.ai);\r\n    }, [])\r\n  \r\n    const newBoard = () =>{\r\n      updatecurrentPlayer(player2);\r\n      updateMessage(\"\");\r\n      updateGameOver(false);\r\n      updateColor(\"white\");\r\n      updateTurn(\"red\")\r\n      updatePlayerName(props.name1)\r\n      let newBoard = [];\r\n      for (let row = 0; row < 7; row++){\r\n        let rows = [];\r\n        for (let col = 0; col < 6; col++){\r\n          rows.push(null);\r\n        }\r\n        newBoard.push(rows);\r\n      }\r\n      updateBoard(newBoard) ;\r\n    }\r\n    \r\n    const aiPlayer = () =>{\r\n      if (currentPlayer === 2){\r\n        let aiMoveCol = Math.floor(Math.random() * 7);\r\n        const table = [...board];\r\n      let newArr = table[aiMoveCol];\r\n      let addLast = newArr.lastIndexOf(null);\r\n      newArr[addLast] = player2  \r\n      updateBoard(table)\r\n      checkAll(board)\r\n      }\r\n    }\r\n\r\n    const turnColor = () => {\r\n      if (turn === \"red\" && ai === false){\r\n        updateTurn(\"blue\")\r\n        updatePlayerName(props.name2)\r\n      }\r\n      else{\r\n        updateTurn(\"red\")\r\n        updatePlayerName(props.name1)\r\n      }\r\n    }\r\n  \r\n    const press = (e) =>{\r\n      \r\n      if (ai === false){\r\n        updatecurrentPlayer(currentPlayer === player1 ? player2 : player1)\r\n      }\r\n      \r\n      let col = e.target.dataset.col;\r\n      const table = [...board];\r\n      let newBoard = table[col];\r\n      let addLast = newBoard.lastIndexOf(null);\r\n      newBoard[addLast] = currentPlayer === player1 ? player2 : player1;\r\n  \r\n      updateBoard(table)\r\n      turnColor()\r\n      if (ai === true){\r\n        aiPlayer()\r\n      }\r\n      else{\r\n        checkAll(board)\r\n      }\r\n    }\r\n\r\n    const winMess = (x) =>{\r\n      if (x === 1){\r\n        updateColor(\"red\");\r\n        updatePlayer1Points(player1Points + 1);\r\n        return (props.name1 + \" Wins !!\");\r\n      }\r\n      else{\r\n        updateColor(\"blue\");\r\n        updatePlayer2Points(player2Points + 1);\r\n        return (props.name2 + \" Wins !!\");\r\n      }\r\n    }\r\n  \r\n    const checkH = (board) =>{\r\n      for (let r = 3; r < 7; r++) {\r\n        for (const [c] of board.entries()) {\r\n          if (board[r][c]) {\r\n            if (board[r][c] === board[r - 1][c] &&\r\n                board[r][c] === board[r - 2][c] &&\r\n                board[r][c] === board[r - 3][c]) {\r\n                  updateGameOver(true);\r\n                  updateMessage(winMess(board[r][c]));\r\n                  updateTurn(\"black\");\r\n                  updatePlayerName(\"\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    const checkV = (board) =>{\r\n      for (const [r] of board.entries()) {\r\n        for (const [c] of board.entries()) {\r\n          if (board[r][c]) {\r\n            if (board[r][c] === board[r][c + 1] && \r\n                board[r][c] === board[r][c + 2] &&\r\n                board[r][c] === board[r][c + 3]) {\r\n                  updateGameOver(true)\r\n                  updateMessage(winMess(board[r][c]));\r\n                  updateTurn(\"black\");\r\n                  updatePlayerName(\"\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    const checkDR = (board) =>{\r\n      for (let r = 3; r < 7; r++) {\r\n        for (const [c] of board.entries()) {\r\n          if (board[r][c]) {\r\n            if (board[r][c] === board[r - 1][c + 1] &&\r\n                board[r][c] === board[r - 2][c + 2] &&\r\n                board[r][c] === board[r - 3][c + 3]) {\r\n                  updateGameOver(true);\r\n                  updateMessage(winMess(board[r][c]));\r\n                  updateTurn(\"black\");\r\n                  updatePlayerName(\"\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    const checkDL = (board) =>{\r\n      for (let r = 3; r < 7; r++) {\r\n        for (let c = 3; c < 6; c++) {\r\n          if (board[r][c]) {\r\n            if (board[r][c] === board[r - 1][c - 1] &&\r\n                board[r][c] === board[r - 2][c - 2] &&\r\n                board[r][c] === board[r - 3][c - 3]) {\r\n                  updateGameOver(true)\r\n                  updateMessage(winMess(board[r][c]));\r\n                  updateTurn(\"black\");\r\n                  updatePlayerName(\"\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    const checkDraw = (board) =>{\r\n      for (const [r] of board.entries()) {\r\n        for (const [c] of board.entries()) {\r\n          if (board[r][c] === null) {\r\n            return null;\r\n          }\r\n        }\r\n      }\r\n      updatePlayer1Points(player1Points + 1);\r\n      updatePlayer2Points(player2Points + 1);\r\n      updateGameOver(true)\r\n      updateMessage(\"Draw !!\") \r\n      updateTurn(\"black\");\r\n      updatePlayerName(\"\");  \r\n    }\r\n\r\n    const checkAll = (board) =>{\r\n        return (checkH(board) || checkV(board) || checkDR(board) || checkDL(board) || checkDraw(board));\r\n    }\r\n\r\n    const resetPoints = () =>{\r\n      updatePlayer1Points(0)\r\n      updatePlayer2Points(0)\r\n      newBoard()\r\n    }\r\n  \r\n    const renderBoard = (row, index) =>{\r\n      \r\n      let redDiv = <div data-col={trCount.toString()} className=\"div redDiv\" onClick={press}/>\r\n      let blueDiv = <div data-col={trCount.toString()} className=\"div blueDiv\" onClick={press}/>\r\n  \r\n  \r\n      if (!row.includes(null)){\r\n        redDiv = <div data-col={trCount.toString()} className=\"div redDiv\" onClick={press} disabled/>\r\n        blueDiv = <div data-col={trCount.toString()} className=\"div blueDiv\" onClick={press} disabled/>\r\n      }\r\n      \r\n      let rows = row.map((x, index) => {\r\n        if (x === 1){\r\n          return(\r\n            <td className=\"td\" key={index + 1}>\r\n              {redDiv}\r\n            </td>\r\n            );\r\n        }\r\n        else if (x === 2){\r\n          return(\r\n            <td className=\"td\" key={index + 1}>\r\n              {blueDiv}\r\n            </td>\r\n            );\r\n        }\r\n        return(\r\n          <td className=\"td\" key={index + 1}>\r\n            <div data-col={trCount.toString()} className=\"div\" onClick={press}/>\r\n          </td>\r\n      );\r\n      })\r\n      trCount++; \r\n      return(\r\n          <tr key={index + 1} className=\"tr\">{rows}</tr>\r\n      );\r\n    }\r\n      const table = board.map(renderBoard);\r\n      return(\r\n        <>\r\n        <Helmet title=\"Connect 4 - Labb 4 AvJs\"/>\r\n        <h1 className=\"mainH1\">Connect 4 - Labb 4 AvJs</h1>\r\n        <button className=\"logOutBtn\" onClick={props.onOut}>Log Out</button>\r\n        <div className=\"turnName\">Turn</div>\r\n        <div className=\"buttons\">\r\n        <button className=\"btn\" onClick={newBoard}>New Game</button>\r\n        <button className=\"btnReset\" onClick={resetPoints}>Reset</button>\r\n        </div>\r\n        <div className=\"turn\" style={{backgroundColor: turn}}><b>{playerName}</b></div>\r\n        <div className=\"points\">\r\n        <b><span style={{color: \"red\"}}>{props.name1} :</span> <span style={{fontSize: \"30px\"}}>{player1Points}</span> - <span style={{fontSize: \"30px\"}}>{player2Points}</span> <span style={{color: \"blue\"}}>: {props.name2}</span></b>\r\n        </div>\r\n        <table className=\"table\" disabled={gameOver}>\r\n          <tbody>\r\n            {table}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"message\" style={{color: color}}><b>{message}</b></div>\r\n        </>\r\n      );\r\n  }\r\n\r\n  export default Connect4;","import React, { useState } from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\nimport '../App.css';\r\n\r\nfunction Name (props) {\r\n    const [name1, updateName1] = useState(\"Player1\");\r\n    const [name2, updateName2] = useState(\"Player2\");\r\n    const [aiOn, updateAiOn] = useState(false)\r\n  \r\n    const onChange1 = (e) => {\r\n      updateName1(e.target.value)\r\n      props.onChange1(e);\r\n    };\r\n    const onChange2 = (e) => {\r\n      updateName2(e.target.value)\r\n      props.onChange2(e);\r\n    };\r\n    const onChangeAiOn = () => {\r\n      updateAiOn(true);\r\n      props.onChangeAiOn()\r\n      updateName2(\"Computer\")\r\n    }\r\n    const onChangeAiOff = () => {\r\n      updateAiOn(false);\r\n      props.onChangeAiOff()\r\n      updateName2(\"Player2\")\r\n    }\r\n    const handleFocus = (e) => e.target.select();\r\n    \r\n    return( \r\n    <>\r\n    <Helmet title=\"Connect 4 - Name Players\"/>\r\n    <h1 className=\"loginH1\">Connect 4 - Name Players</h1>\r\n    <div className=\"loginMain\">\r\n    <input maxLength=\"11\" className=\"loginTextInput1\" value={name1} onClick={handleFocus} onChange={onChange1} type=\"text\"/>\r\n    <span className=\"vs\"> <b>VS</b> </span>\r\n    <input maxLength=\"11\" className=\"loginTextInput2\" value={name2} onClick={handleFocus} onChange={onChange2} type=\"text\" disabled={aiOn}/><br/>\r\n    <div className=\"loginAi\">\r\n    <label><b>Stupid AI:</b></label>\r\n    <input onChange={onChangeAiOff} type=\"radio\" name=\"ai\" defaultChecked={true}/><label>AI Off </label>\r\n    <input onChange={onChangeAiOn} type=\"radio\" name=\"ai\"/><label>AI On</label>\r\n    </div>\r\n    <button className=\"loginBtn\" onClick={props.onLogin}>Play</button>\r\n    </div>\r\n    </>\r\n    );\r\n  }\r\n  export default Name;","import React, { useState } from 'react';\nimport Connect4 from './components/Connec4.js'\nimport Name from './components/Name.js';\nimport './App.css';\n\nfunction App () {\n  \n  const [isLoggedIn, updateIsLoggedIn] = useState(false);\n  const [name1, updateName1] = useState(\"Player1\");\n  const [name2, updateName2] = useState(\"Player2\");\n  const [aiOn, updateAiOn] = useState(false)\n\n\n  const onChange1 = (e) => updateName1(e.target.value);\n  const onChange2 = (e) => updateName2(e.target.value);\n\n  const onChangeAiOn = () => { updateAiOn(true); \n                               updateName2(\"Computer\");\n                             };\n\n  const onChangeAiOff = () => { updateAiOn(false);\n                                updateName2(\"Player2\");\n                              };\n\n  const onLogin = () => {\n                          updateIsLoggedIn(true);\n                          if (name1 === \"\"){\n                            updateName1(\"Player1\");\n                          }\n                          if (name2 === \"\"){\n                            updateName2(\"Player2\");\n                          }\n                        }\n\n  const onOut = () => { updateIsLoggedIn(false);\n                        updateName1(\"Player1\");\n                        updateName2(\"Player2\");\n                        updateAiOn(false);\n                      };\n\n  return (\n    isLoggedIn ? <Connect4 ai={aiOn} name1={name1} name2={name2} onOut={onOut} /> : <Name onChangeAiOff={onChangeAiOff} onChangeAiOn={onChangeAiOn} onChange1={onChange1} onChange2={onChange2} onLogin={onLogin}/> \n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}